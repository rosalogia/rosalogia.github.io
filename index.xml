<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ambika Eshwar</title>
    <link>/</link>
    <description>Recent content on Ambika Eshwar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 02 Dec 2020 05:09:00 -0500</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parsing Programming Languages with FParsec</title>
      <link>/posts/functional-parsing/</link>
      <pubDate>Wed, 02 Dec 2020 05:09:00 -0500</pubDate>
      
      <guid>/posts/functional-parsing/</guid>
      <description>Over the past few months, after learning about parser combinators in Joachim Breitner&amp;rsquo;s Haskell course, I&amp;rsquo;ve found myself needing or wanting to approach a problem by writing a parser more often than I had ever expected to. Each time, I&amp;rsquo;m amazed and satisfied by the simplicity and declarativity of parser-combinators. Not only does the functional pattern of combinator functions result in clean and readable code (except for mystical operators here and there), I find that it also makes solving problems much more interesting and much less repetitive.</description>
    </item>
    
    <item>
      <title>Apps</title>
      <link>/apps/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/apps/</guid>
      <description>This page contains links to some of the small applications I&amp;rsquo;ve built that are demonstrated on this site. Projects that don&amp;rsquo;t have web front-ends only exist on my GitHub account.
ReqCheck ReqCheck is an application for Rutgers Computer Science and Math students to find out which courses they&amp;rsquo;re eligible to take in coming semesters by inputting the courses they&amp;rsquo;ve taken (or will have taken by a certain point) so far.</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>/resources/</link>
      <pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/resources/</guid>
      <description>This page is a growing compilation of free resources for learning to use various technologies, tools, and skills that I find interesting, fun, productive or essential. Most if not all of them are those which I&amp;rsquo;ve used myself. I attempt to list them in order of relative complexity to a new programmer.
Note: arguably the most important thing on this page is the While Learning to Program â€¦ section. Please check it out, if nothing else.</description>
    </item>
    
    <item>
      <title>Configuring Saturn to Use Postgres</title>
      <link>/posts/configuring-saturn-to-use-postgres/</link>
      <pubDate>Sat, 12 Sep 2020 17:10:35 -0400</pubDate>
      
      <guid>/posts/configuring-saturn-to-use-postgres/</guid>
      <description>Saturn is a modern MVC-oriented web framework for F# built on .NET Core, making it a suitable option for cross-platform development and deployment on unix-like operating systems, which for me is a must. The F# community is really enthusiastic about a feature of the F# language and environment which they lovingly refer to as type providers. When it comes to type providers, the objective is usually to provide some kind of immediate and type-safe mapping between an external data source and your F# codebase.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Hi. My name is Ambika. You can learn a little about me and what I do on this page:
I have been developing software since 2016, primarily in F# and OCaml. I enjoy developing and contributing to open-source software projects that I make use of or that interest me. I am particularly enthusiastic about functional programming, as well as the F#, OCaml, and Rust programming languages. I generally prefer developing software that will be used by other developers, e.</description>
    </item>
    
    <item>
      <title>About Programming</title>
      <link>/about-programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about-programming/</guid>
      <description>I think programming gets to be really relaxing at a certain level of experience, and I don&amp;rsquo;t think learning it is necessarily painful in comparison either. I think computer science degrees fail to demonstrate how pleasant and relaxing it can be. One of my girlfriend&amp;rsquo;s favorite hobbies is crocheting. At some point it occurred to me that I enjoy programming in a way that&amp;rsquo;s very similar to the way she enjoys crocheting.</description>
    </item>
    
    <item>
      <title>Bika Bika&#39;s RPG Guide to Programming : Glossary</title>
      <link>/rpg-guide-glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rpg-guide-glossary/</guid>
      <description>This page documents a list of words that might be unfamiliar to you but end up getting used quite a few times throughout this series of posts.
C Console A program on your computer that presents you with a black box with a line of text that you can type after. From the console window, you can execute programs.
Console Application A program that does things exclusively within the console window, and thus can be run from the console window without opening any other windows.</description>
    </item>
    
    <item>
      <title>Bika Bika&#39;s RPG Guide to Programming : Part 2</title>
      <link>/rpg-guide-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rpg-guide-2/</guid>
      <description>Links:
Previous post Glossary Install Guide The Console Soon we&amp;rsquo;re going to start writing programs. They will be a little boring, and it will be hard to see the practicality of it all for a little while. I&amp;rsquo;ll try to show you practical examples sooner than later, but in the meantime please bear with me and keep your mind open. Most programmers start off writing applications known as &amp;ldquo;console applications&amp;rdquo;. A &amp;ldquo;console&amp;rdquo; is a program on your computer that presents you with little more than a black box with a place to type text into.</description>
    </item>
    
    <item>
      <title>Bika Bika&#39;s RPG Guide to Programming : Set Up</title>
      <link>/rpg-guide-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rpg-guide-install/</guid>
      <description>This page is an installation guide for all the tools we&amp;rsquo;ll need to begin writing programs in C#. This guide is oriented towards users of Windows. If you use Mac, you can talk to me for guidance on how to set up.
Here&amp;rsquo;s a list of the tools we&amp;rsquo;re going to install and what we&amp;rsquo;ll use them for:
The .NET SDK: This is a set of software development tools that includes the C# programming language as a part of it.</description>
    </item>
    
  </channel>
</rss>
