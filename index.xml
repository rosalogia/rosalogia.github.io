<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ambika Eshwar</title>
    <link>/</link>
    <description>Recent content on Ambika Eshwar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 02 Dec 2020 05:09:00 -0500</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parsing Programming Languages with FParsec</title>
      <link>/posts/functional-parsing/</link>
      <pubDate>Wed, 02 Dec 2020 05:09:00 -0500</pubDate>
      
      <guid>/posts/functional-parsing/</guid>
      <description>Over the past few months, after learning about parser combinators in Joachim Breitner&amp;rsquo;s Haskell course, I&amp;rsquo;ve found myself needing or wanting to approach a problem by writing a parser more often than I had ever expected to. Each time, I&amp;rsquo;m amazed and satisfied by the simplicity and declarativity of parser-combinators. Not only does the functional pattern of combinator functions result in clean and readable code (except for mystical operators here and there), I find that it also makes solving problems much more interesting and much less repetitive.</description>
    </item>
    
    <item>
      <title>Apps</title>
      <link>/apps/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/apps/</guid>
      <description>This page contains links to some of the small applications I&amp;rsquo;ve built that are demonstrated on this site. Projects that don&amp;rsquo;t have web front-ends only exist on my GitHub account.
ReqCheck ReqCheck is an application for Rutgers Computer Science and Math students to find out which courses they&amp;rsquo;re eligible to take in coming semesters by inputting the courses they&amp;rsquo;ve taken (or will have taken by a certain point) so far.</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>/resources/</link>
      <pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/resources/</guid>
      <description>This page is a growing compilation of free resources for learning to use various technologies, tools, and skills that I find interesting, fun, productive or essential. Most if not all of them are those which I&amp;rsquo;ve used myself. I attempt to list them in order of relative complexity to a new programmer.
Note: arguably the most important thing on this page is the While Learning to Program â€¦ section. Please check it out, if nothing else.</description>
    </item>
    
    <item>
      <title>Configuring Saturn to Use Postgres</title>
      <link>/posts/configuring-saturn-to-use-postgres/</link>
      <pubDate>Sat, 12 Sep 2020 17:10:35 -0400</pubDate>
      
      <guid>/posts/configuring-saturn-to-use-postgres/</guid>
      <description>Saturn is a modern MVC-oriented web framework for F# built on .NET Core, making it a suitable option for cross-platform development and deployment on unix-like operating systems, which for me is a must. The F# community is really enthusiastic about a feature of the F# language and environment which they lovingly refer to as type providers. When it comes to type providers, the objective is usually to provide some kind of immediate and type-safe mapping between an external data source and your F# codebase.</description>
    </item>
    
    <item>
      <title>Python for Java Programmers</title>
      <link>/posts/java-to-python/</link>
      <pubDate>Mon, 07 Sep 2020 02:00:50 -0400</pubDate>
      
      <guid>/posts/java-to-python/</guid>
      <description>The bulk of the content I plan on including in this site has to do with helping less experienced programmers in my class familiarise themselves with programming tools, practices and environments that are more common and useful outside of an academic [or, at least, undergraduate] environment. Python is a simple and powerful programming language that sees a lot of use in professional, casual and open-source spaces, and knowing it can make you more employable but can also help you make your life easier or participate in open source projects that interest you.</description>
    </item>
    
    <item>
      <title>Setting Up a Discord Bot Development Environment with Python</title>
      <link>/posts/rucs24-setup/</link>
      <pubDate>Sat, 05 Sep 2020 23:36:21 -0400</pubDate>
      
      <guid>/posts/rucs24-setup/</guid>
      <description>This guide was originally written to meet the particular needs of the Rutgers Computer Science - Class of 2024 Discord Bot, and has been included on this site because I personally feel that it is a generally useful and informative guide for those who have never developed outside of an academic environment, and wish to familiarise themselves with the tools and procedures of open source development.
RUCS24-Bot is a Discord bot written in Python.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Hi. My name is Ambika. You can learn a little about me and what I do on this page:
 I am a student at Rutgers, The State University of New Jersey, majoring in Computer Science and Mathematics. I am an OCaml developer for Marigold. I enjoy developing and contributing to open-source software projects that I make use of or that interest me. I am particularly enthusiastic about functional programming, as well as the F#, OCaml, and Rust programming languages.</description>
    </item>
    
  </channel>
</rss>
